/**
 * Java object layout: https://openjdk.java.net/projects/code-tools/jol
 */
configurations {
  objectLayout
}

dependencies {
  objectLayout libraries.javaObjectLayout
}

tasks.register('footprint', JavaExec) {
  description = 'Estimate the footprint of all objects reachable from a given instance'
}
tasks.register('externals', JavaExec) {
  description = 'Shows objects reachable from a given instance'
}
tasks.register('estimates', JavaExec) {
  description = 'Simulate the class layout in different VM modes'
}
tasks.register('internals', JavaExec) {
  description = 'Show the field layout, default contents, and header'
}

tasks.register('packing', JavaExec) {
  group = 'Object Layout'
  description = 'Compute the object footprint under different field layout strategies'
  dependsOn(jar)
  mainClass = 'org.openjdk.jol.Main'
  args it.name, jar.archivePath
  it.classpath configurations.objectLayout
}

def objectLayoutTasks = [
  tasks.named('footprint'), tasks.named('externals'),
  tasks.named('estimates'), tasks.named('internals')
]
objectLayoutTasks*.configure {
  group 'Object Layout'
  dependsOn(compileJava)
  mainClass = 'org.openjdk.jol.Main'
  classpath configurations.objectLayout, sourceSets.main.runtimeClasspath
  doFirst {
    if (!project.hasProperty('className')) {
      throw new GradleException("Usage: ${it.name} " +
        '-PclassName=com.github.benmanes.caffeine.[CLASS_NAME]')
    }
    args it.name, 'com.github.benmanes.caffeine.' + className
  }
}
